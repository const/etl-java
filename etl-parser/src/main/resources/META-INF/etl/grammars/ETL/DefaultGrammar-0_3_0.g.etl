doctype ETL.Grammar "0.3.0";
// Reference ETL Parser for Java
// Copyright (c) 2000-2022 Constantine A Plotnikov
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without restriction,
// including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software,
// and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
// BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

/// This is a default grammar. It is used if one of the following happened:
/// <ul>
///   <li>Doctype directive is missing or it has invalid syntax and default
///       grammar is not specified for parser.</li>
///   <li>Grammar referenced by doctype statement cannot be located.</li>
///   <li>Grammar is located but failed to be parsed because of IO error
///       or it is invalid (some syntax or semantic errors).</li>
/// </ul>
///
/// Note that this grammar is hard-coded and it is provided here just for
/// informational purposes.
///
/// <author>const</author>
grammar ETL.DefaultGrammar "0.3.0" {
	namespace default d = "http://etl.sf.net/etl/default";

	/// The only context in this grammar
	context default DefaultContext {

		/// Documentation mapping definition.
		documentation DefaultDocumentation {
			@ Documentation += doclines wrapper d:DefaultDocumentationLine.Text;
		};

		/// Default statement that matches anything
		statement DefaultStatement {
			@ Content += {
				{
					^ d:DefaultBlock { @ Content += block; };
				} | {
					^ d:DefaultTokens { @ Values += token+; };
				};
			}*;
		};
	};
};